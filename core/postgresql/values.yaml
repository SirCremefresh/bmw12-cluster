
postgresql:
  replicaCount: 1
  updateStrategyType: RollingUpdate

  pgHbaTrustAll: true

  resources:
    limits:
      cpu: 1500m
      memory: 1512Mi
    requests:
      cpu: 250m
      memory: 256Mi

  pdb:
    create: false

  username: postgres

pgpool:
  replicaCount: 1

  resources:
    limits:
      cpu: 1500m
      memory: 1512Mi
    requests:
      cpu: 250m
      memory: 256Mi

  pdb:
    create: false

  adminUsername: admin


##
ldap:
  enabled: true
  ## Retrieve LDAP bindpw from existing secret
  ##
  # existingSecret: myExistingSecret
  uri: ldap://ldap.intra.bmw12.ch
  base: dc=bmw12,dc=ch
  binddn: cn=admin,dc=bmw12,dc=ch
  bindpw:
  bslookup: ou=users,dc=bmw12,dc=ch
  scope: sub
  tls_reqcert: never
  nss_initgroups_ignoreusers: root,nslcd

persistence:
  enabled: true
  storageClass: longhorn
  accessModes:
    - ReadWriteOnce

  size: 10Gi

service:
  type: LoadBalancer
  port: 5432
  loadBalancerIP: "192.168.1.23"

ingress:
  enabled: false

networkPolicy:
  enabled: true
  allowExternal: true

#
#metrics:
#  enabled: false
#
#  resources:
#    limits:
#      cpu: 250m
#      memory: 256Mi
#    requests:
#      cpu: 250m
#      memory: 256Mi
#
#  ## Annotations for Prometheus exporter
#  ##
#  annotations:
#    prometheus.io/scrape: "true"
#    prometheus.io/port: "9187"
#
#  ## Enable this if you're using Prometheus Operator
#  ##
#  serviceMonitor:
#    enabled: false
#    namespace: monitoring
#
#    selector:
#      prometheus: prometheus-server

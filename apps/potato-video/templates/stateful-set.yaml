apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.apps.backend.name }}
spec:
  replicas: {{ .Values.apps.backend.replicas }}
  serviceName: {{ .Values.apps.backend.name }}
  selector:
    matchLabels:
      app: {{ .Values.apps.backend.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.apps.backend.name }}
    spec:
      nodeSelector:
        kubernetes.io/hostname: srv01
      containers:
        - name: {{ .Chart.Name }}
          image: "{{.Values.images.backend.name}}:{{.Values.images.backend.tag}}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: PRODUCTION
              value: "true"
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.apps.backend.database.databaseSecret }}
                  key: DATABASE_PASSWORD
            - name: DATABASE_USER
              value: {{ .Values.apps.backend.database.user | quote }}
            - name: DATABASE_PORT
              value: {{ .Values.apps.backend.database.port | quote }}
            - name: DATABASE_HOST
              value: {{ .Values.apps.backend.database.host | quote }}
          volumeMounts:
            - name: videos
              mountPath: /tmp/videos
            - name: ctf-flag
              mountPath: /root/flag
              readOnly: true
      volumes:
        - name: ctf-flag
          configMap:
            name: {{ .Values.apps.backend.ctf.ctfSecret }}
  volumeClaimTemplates:
    - metadata:
        name: videos
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "local-path"
        resources:
          requests:
            storage: 50Gi
